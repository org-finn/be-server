version: '3.8'

services:
  # Spring Boot Application
  spring-app:
    # ⭐️ CI/CD에서는 미리 빌드된 이미지를 사용하므로 build 대신 image를 사용합니다.
    # 변수(${SPRING_APP_IMAGE})는 GitHub Actions에서 전달합니다.
    image: ${SPRING_APP_IMAGE}
    container_name: spring-app
    ports:
      - "8080:8080"
    env_file:
      - .env-prod
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "ap-northeast-2"
        awslogs-group: "articker-ec2-server-main-logs"
        awslogs-create-group: "true"
        awslogs-stream: "${SERVICE_ROLE}-${INSTANCE_ID}"

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # 로컬 설정 파일을 컨테이너에 마운트
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  # Grafana
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - /mnt/efs/grafana-data:/var/lib/grafana
    depends_on:
      - prometheus # Prometheus가 먼저 실행된 후 Grafana가 실행되도록 설정